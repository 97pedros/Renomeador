<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAABGdBTUEAALGPC/xhBQAAA11JREFUeF7t
        1E2OEzEUxHHOwAEQgitwB47Big3nYYXEVdggcRZWXCHkjezI8+ZN4v5wt+36/6QSM0OS7o5L9QYY3of3
        ny6W9CtU5IP/+/PbUyiBCH/wFEBEPvg/Xz++OPwcSjCh8uDLUIDJvXbwOVEBLJRgcI8OvgwFmEg++O+f
        3z4lOnCfqAAWSjCY8uDLRIfuQwEmEZUgOnCfqAAWSjAYVgCsgDpWAKyAOlYArIA6VgCsgDpWAKyAOlYA
        rIA6VgCsgDpWAKyAOlYArIA6VgCsgDpWAKyAOlYArIA6VgCrV8BCCSbACoAVUMcKgBVQxwqAFVDHCoAV
        UMcKgBVQxwqAFVDHCoAVUMcKgBVQxwqAEqijAKAE6igAKIE6CgBKoI4CgBKoowCgBOooACiBui0FsFCA
        CbAC4lgBsALqWAGwAupYAbAC6lgBsALqWAGwAurUVsBujoY6MitwSezHIvJkViCd/zP2ZxdJEiuQzvwu
        e5mLBIkVSGe8iL2tyNSmX4F0pqvZR7hMZfoVSOe4G/tIl+FNvQLp3JqxSxQZ0tQrkM7pEHY5l2FMuwLp
        bE5hl3fp1rQrkM6iC3Y7Rboz5Qqk7747dmsup5tyBdL33T27VZdTTLcC6fsdjt16kcO0WIFTS5C+z6HZ
        Y7g0tecKUIAG7LFcdrWlAJby4P/9/jFHAeyjtqYVd51drC1BefA5wxXA3nZEWgius8rSAkQHP0QB7CW9
        pIXgOtVqSnDv4HO6LID9V49pzV3vrnsFqDn4nK4KYH/akkei96zJEYLrvuBLYL//+vIuPOjX0kUB7Me1
        WSv6rCU5WnAPtwLYv5bogB8lf9ZZygdalL1En12bM+V72HL4Fnvv9XNOc3uQ2rQSXas2PVhbhKEKcJTo
        2jXpwdIiuGc4nL+BMGeK7qcmZ6stgb0ui57jmqaiC97So+g+a3KGe2uQ/68sQCR4ll1FF3jKCKL7rsnR
        yiKUB5+zRPQ816z24sNGFT3L0rQUHXzOVtGzXFPl2Ztm4J9p72zVogCR4N5DtxfMrHzOntKyAF50/Wvm
        PvhH3JdxSo4qQET79F8RHdLe6QUFqBAdYJQRUYCFooO3jIoCiKMA4iiAOAogjgKIowDiKIA4CiCOAoij
        AOIogDgKII4CSLtc/gMKpatvR9V+vwAAAABJRU5ErkJggg==
</value>
  </data>
</root>